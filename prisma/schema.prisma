// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
  downloadCount Int       @default(0)
  lastDownloadDate DateTime @default(now())
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum OperationType{
  MERGE
  COMPRESS
  CONVERT_TO_IMAGE
  EDIT
}

model PerformanceLog {
  id                      String        @id @default(cuid())
  operationType           OperationType // 어떤 작업이었는지 (병합, 압축, 변환 등)
  fileCount               Int           // 처리한 파일 개수
  totalInputSizeInBytes   BigInt        // 총 입력 파일 크기 (bytes)
  outputSizeInBytes       BigInt?       // 결과물 파일 크기 (압축률 등을 위해)
  processingTimeInMs      Int           // 처리 소요 시간 (밀리초)
  createdAt               DateTime      @default(now()) // 기록된 시간
  githubVersion           String?       // GitHub 버전 (선택 사항)
  path                    String?      
}

model FrontendVital {
  id                      String        @id @default(cuid())
  createdAt               DateTime      @default(now())
  path                    String
  name                    String
  value                   Float
  githubVersion           String?       // GitHub 버전 (선택 사항)
}

// 사용자 경험(UX)과 관련된 성능 지표를 기록하는 모델
model UserExperienceLog {
  id                   String   @id @default(cuid())
  createdAt            DateTime @default(now())
  
  metricName           String   // 어떤 경험을 측정했는지 (예: 'preview_generation')
  durationInMs         Int      // 경험에 소요된 총 시간 (ms)
  
  path                 String   // 어느 페이지에서 발생했는지
  fileCount            Int?     // 관련된 파일 수
  totalFileSizeInBytes BigInt?  // 관련된 파일 총 크기
  
  githubVersion        String?
}
